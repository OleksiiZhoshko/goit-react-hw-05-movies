{"version":3,"file":"static/js/493.f7164df8.chunk.js","mappings":"6MAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,2BACE,gBAAKC,KAAKC,EAAAA,EAAAA,GAAaF,EAAMG,aAAcC,IAAKJ,EAAMK,MAAOC,MAAM,WACnE,SAAC,KAAD,CAASC,GAAE,kBAAaP,EAAMQ,IAAMC,MAAQ,CAACC,KAAMb,GAAnD,SAAgEG,EAAMK,UAF/DL,EAAMQ,GADA,KAQtB,C,wGCmBD,UA/Ba,WACT,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAkBE,GAAlB,WAqBA,OAnBAC,EAAAA,EAAAA,YAAU,YACN,iBAAC,gHAE+BC,EAAAA,EAAAA,MAF/B,gBAEcC,EAFd,EAEcA,QACPJ,EAAUI,GAHjB,gDAKOC,QAAQC,IAAR,MALP,yBAOOL,GAAa,GAPpB,2EAAD,EAUH,GAAE,KASC,4BACI,kCACA,SAAC,IAAD,CAAYjB,OAAQA,MAG/B,C,8LChCDuB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCACFL,EAAa,mCAAG,2GAC3BM,EAD2B,oDAE3BC,EAF2B,gCAIRH,EAAAA,EAAAA,IAAA,UAAaE,EAAb,oBAAkCD,GAAUE,GAJpC,cAIrBC,EAJqB,yBAKpBA,EAAKC,MALe,2CAAH,qDAObC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,uFACZH,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBJ,GAH6B,cACzBC,EADyB,yBAKxBA,EAAKC,MALmB,2CAAH,wDAOjBG,EAAkB,mCAAG,WAAOnB,GAAP,8FAAWoB,EAAX,+BAA4B,GAAIN,EAAhC,gCACbH,EAAAA,EAAAA,IAAA,gBACRX,GADQ,OACHoB,EADG,oBACuBR,EADvB,mBAEjBE,GAH8B,cAC1BC,EAD0B,yBAKzBA,EAAKC,MALoB,2CAAH,sDAQlBK,EAAa,mCAAG,WAAOC,EAASR,GAAhB,uFACRH,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,4BAA8CV,EAA9C,mBAAuEE,GAD/D,cACrBC,EADqB,yBAEpBA,EAAKC,KAAKO,MAFU,2CAAH,wDAKbC,EAAgB,mCAAG,WAAOF,EAASR,GAAhB,uFACXH,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,4BAA8CV,EAA9C,mBAAuEE,GAD5D,cACxBC,EADwB,yBAEvBA,EAAKC,KAAKR,SAFa,2CAAH,uD,sDC7BtB,IAAMd,EAAe,SAAA+B,GAC1B,OAAKA,EAIEA,EAAKC,WAAW,UACnBD,EAAKE,MAAM,GADR,0CAEgCF,GAL9B,mEAMV,C","sources":["components/MoviesList/MoviesList.jsx","components/pages/Home.jsx","components/servise/appServise.js","components/servise/constants.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'components/servise/constants';\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <img src={BASE_IMG_URL(movie.poster_path)} alt={movie.title} width=\"100px\"/>\n          <NavLink to={`/movies/${movie.id}`} state ={{from: location,}}>{movie.title}</NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { fetchDayTrend } from \"../servise/appServise\";\nimport { MoviesList } from \"../MoviesList/MoviesList\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const {results} = await fetchDayTrend();\n                setMovies(results)\n            } catch (err) {\n                console.log(err)\n            } finally {\n                setIsLoading(false)\n}\n        })();\n    }, []);\n\n    if (isLoading) {\n        <div>\n            <h2>Loading...</h2>\n    </div>\n}\n\n    return (\n        <div>\n            <h1>Home</h1>\n            <MoviesList movies={movies}/>\n        </div>\n    )\n}\n\nexport default Home;","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\nexport const fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async (movieId, options) => {\n  const resp = await axios.get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`, options);\n  return resp.data.cast\n}\n\nexport const fetchReviewsInfo = async (movieId, options) => {\n  const resp = await axios.get(`movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`, options);\n  return resp.data.results\n}","// export const BASE_IMG_URL = 'https:/image.tmdb.org/t/p/w400';\nexport const BASE_IMG_URL = path => {\n  if (!path) {\n    return 'https://placeholder.pics/svg/300/7050FF-2716FF/FFFFFF/Not%20found';\n  }\n\n  return path.startsWith('/https')\n    ? path.slice(1)\n    : `https://image.tmdb.org/t/p/w400/${path}`;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","movie","src","BASE_IMG_URL","poster_path","alt","title","width","to","id","state","from","useState","setMovies","setIsLoading","useEffect","fetchDayTrend","results","console","log","axios","apiKey","endpoints","options","resp","data","fetchMovieByQuery","query","fetchMovieDetsById","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","path","startsWith","slice"],"sourceRoot":""}